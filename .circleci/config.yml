version: 2.1
executors:
  golang-executor:
    environment:
      - DEP_VERSION: 0.5.1
      - ORG_NAME: nmaupu
      - PROJECT_NAME: vault-secret
    docker:
      - image: circleci/golang:1.10.0
    working_directory: /go/src/github.com/nmaupu/vault-secret

jobs:
  prepare:
    executor: golang-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - vendor-{{ .Branch }}-{{ .Revision }}
            - vendor-{{ .Branch }}-
            - vendor-
      - run:
          name: Installing dep tool
          command: |
            curl -L -s https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o $GOPATH/bin/dep
            chmod +x $GOPATH/bin/dep
      - run:
          name: Golang dep installation
          command: |
            if [ ! -d $GOPATH/src/github.com/$ORG_NAME/$PROJECT_NAME/vendor ]; then
              cd $GOPATH/src/github.com/$ORG_NAME/$PROJECT_NAME && \
              make dep
            fi
      - save_cache:
          name: Saving cache for project vendor directory
          key: vendor-{{ .Branch }}-{{ .Revision }}
          paths:
            - vendor
      - run:
          name: Operator-sdk installation
          command: |
              git clone https://github.com/operator-framework/operator-sdk $GOPATH/src/github.com/operator-framework/operator-sdk
              cd $GOPATH/src/github.com/operator-framework/operator-sdk
              make dep
              make install
      - persist_to_workspace:
          root: /go
          paths:
            - src/github.com/operator-framework/operator-sdk
            - bin/operator-sdk
  build:
    executor: golang-executor
    steps:
      - attach_workspace:
          at: /go
      - checkout
      - restore_cache:
          keys:
            - vendor-{{ .Branch }}-{{ .Revision }}
            - vendor-{{ .Branch }}-
            - vendor-
      - setup_remote_docker
      - run:
          name: Docker login
          command: |
            echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
      - run:
          name: Building application
          command: |
            cd $GOPATH/src/github.com/$ORG_NAME/$PROJECT_NAME
            ls -l vendor/
            make build
            make push
            make openapi
workflows:
  version: 2.1
  main:
    jobs:
      - prepare
      - build:
          requires:
            - prepare
